Zadanie 1
function M = scale_matrix(sx, sy)
    M = [sx, 0,  0;
         0,  sy, 0;
         0,  0,  1];
end
points = csvread('punktman.csv');
x = points(:, 1);
y = points(:, 2);
homogeneous_points = [x'; y'; ones(1, length(x))];
sx = 0.1;
sy = 0.2;
M_scaling = scale_matrix(sx, sy);
scaled_points = M_scaling * homogeneous_points;
x_scaled = scaled_points(1, :);
y_scaled = scaled_points(2, :);
figure;
plot(x_scaled, y_scaled, 'r.');
xlabel('X');
ylabel('Y');
grid on;



Zadanie 2
points = csvread('punktman.csv');
x = points(:, 1);
y = points(:, 2);
homogeneous_points = [x'; y'; ones(1, length(x))];
center_x = mean(x);
center_y = mean(y);
function M = translation_matrix(tx, ty)
    M = [1, 0, tx;
         0, 1, ty;
         0, 0,  1];
end
M_translation_to_center = translation_matrix(-center_x, -center_y);
centered_points = M_translation_to_center * homogeneous_points;
x_centered = centered_points(1, :);
y_centered = centered_points(2, :);
figure;
plot(x_centered, y_centered, 'g.');
xlabel('X');
ylabel('Y');
grid on;



Zadanie 3
clear
figure
points = csvread('punktman.csv');
x = points(:, 1);
y = points(:, 2);
homogeneous_points = [x'; y'; ones(1, length(x))];
angle = -60;
function M = rotation_matrix(angle)
    rad = deg2rad(angle); % Zamiana stopni na radiany
    M = [cos(rad), -sin(rad), 0;
         sin(rad),  cos(rad), 0;
         0,         0,        1];
end
M_rotation = rotation_matrix(angle);
rotated_points = M_rotation * homogeneous_points;
x_rotated = rotated_points(1, :);
y_rotated = rotated_points(2, :);
figure;
plot(x_rotated, y_rotated, 'b.');
xlabel('X');
ylabel('Y');
grid on;

Zadanie 4
points = csvread('punktman.csv');
x = points(:, 1);
y = points(:, 2);
homogeneous_points = [x'; y'; ones(1, length(x))];
center_x = mean(x);
center_y = mean(y);
M_translation_to_center = translation_matrix(-center_x, -center_y);
M_rotation_90 = rotation_matrix(90);
M_scaling_small = scale_matrix(0.01, 0.01);
M_combined = M_scaling_small * M_rotation_90 * M_translation_to_center;
transformed_points = M_combined * homogeneous_points;
x_transformed = transformed_points(1, :);
y_transformed = transformed_points(2, :);
figure;
plot(x_transformed, y_transformed, 'm.');
xlabel('X');
ylabel('Y');
grid on;

Zadanie 4 wariant 2
function M = scale_matrix(sx, sy)
    M = [sx, 0, 0; 
         0, sy, 0; 
         0, 0, 1];
end

function M = rotation_matrix(angle)
    rad = deg2rad(angle);
    M = [cos(rad), -sin(rad), 0; 
         sin(rad),  cos(rad), 0; 
         0,         0,        1];
end

function M = translation_matrix(tx, ty)
    M = [1, 0, tx; 
         0, 1, ty; 
         0, 0,  1];
end

points = csvread('punktman.csv');
x = points(:, 1);
y = points(:, 2);

homogeneous_points = [x'; y'; ones(1, length(x))];

center_x = mean(x);
center_y = mean(y);

M_translation_to_center = translation_matrix(-center_x, -center_y);
M_rotation_90 = rotation_matrix(90);
M_scaling_small = scale_matrix(0.01, 0.01);

M_combined = M_scaling_small * M_rotation_90 * M_translation_to_center;

transformed_points = M_combined * homogeneous_points;

x_transformed = transformed_points(1, :);
y_transformed = transformed_points(2, :);

figure;
plot(x_transformed, y_transformed, 'm.');
xlabel('X');
ylabel('Y');
grid on;


display(M_combined);







zadanie przykładowe 

function M = scale_matrix(sx, sy)
    M = [sx, 0, 0; 
         0, sy, 0; 
         0, 0, 1];
end

function M = rotation_matrix(angle)
    rad = deg2rad(angle); 
    M = [cos(rad), -sin(rad), 0; 
         sin(rad),  cos(rad), 0; 
         0,         0,        1];
end

function M = translation_matrix(tx, ty)
    M = [1, 0, tx; 
         0, 1, ty; 
         0, 0,  1];
end

points = csvread('punktman.csv'); 
x = points(:, 1);
y = points(:, 2);

homogeneous_points = [x'; y'; ones(1, length(x))];

sx = 2;
sy = 0.5;
M_scaling = scale_matrix(sx, sy);

scaled_points = M_scaling * homogeneous_points;

pivot_x = 5;
pivot_y = -3;

M_translate_to_origin = translation_matrix(-pivot_x, -pivot_y);
M_rotation = rotation_matrix(45);
M_translate_back = translation_matrix(pivot_x, pivot_y);

M_total_rotation = M_translate_back * M_rotation * M_translate_to_origin;

rotated_points = M_total_rotation * scaled_points;

x_final = rotated_points(1, :);
y_final = rotated_points(2, :);

figure;
plot(x, y, 'b.', 'DisplayName', 'Oryginalne punkty'); hold on;
plot(x_final, y_final, 'r.', 'DisplayName', 'Przekształcone punkty');

xlabel('X');
ylabel('Y');
grid on;







Zad 1
clear;
clc;
clf;

im = double(imread("rzeczka_mniejsza.jpg"));



s_we = size(im,2);
w_we = size(im,1);
y_we = 1:w_we;
x_we = 1:s_we;


s_wy = 1366;
w_wy = 768;
y_wy = 1:w_wy;
x_wy = 1:s_wy;

y_wy =  y_we(round(1+  ( (y_wy-1)*(w_we-1) ) / (w_wy - 1) ));
x_wy =  x_we(round(1+  ( (x_wy-1)*(s_we-1) ) / (s_wy - 1) ));

im2 = im(y_we(y_wy),x_we(x_wy),:);


subplot(1,2,1);
imshow(im/255);

subplot(1,2,2);
imshow(im2/255);


